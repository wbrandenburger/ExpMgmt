# ===========================================================================
#   experiment.py -----------------------------------------------------------
# ===========================================================================

#   import ------------------------------------------------------------------
# ---------------------------------------------------------------------------
import os
import glob

#   class -------------------------------------------------------------------
# ---------------------------------------------------------------------------
class Experiment:

    #   method --------------------------------------------------------------
    # -----------------------------------------------------------------------
    def __init__(self, name, paths):
        assert(isinstance(name, str)), '`name` must be a string'
        assert(isinstance(paths, list)), '`paths` must be a list'
        self.name = name
        self.paths = sum(
            [glob.glob(os.path.expanduser(p)) for p in paths],
            []
        )
    #   method --------------------------------------------------------------
    # -----------------------------------------------------------------------
    def path_format(self):
        return ":".join(self.paths)

    #   method --------------------------------------------------------------
    # -----------------------------------------------------------------------
    def __str__(self):
        return self.name

#   function ----------------------------------------------------------------
# ---------------------------------------------------------------------------
def from_paths(paths):
    name = ":".join(paths)
    return Experiment(name, paths)
